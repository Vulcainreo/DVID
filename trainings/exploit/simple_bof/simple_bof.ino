#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Fonts/FreeSans9pt7b.h>
#include <SoftwareSerial.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define CANARY 0xABAB

SoftwareSerial ser(0,1);

struct msg{
  char content[50];
  int canary;
};
struct msg msg;

void setup() {
  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
  
  display.clearDisplay();
  display.setTextSize(1);      // Normal 1:1 pixel scale
  display.setTextColor(WHITE); // Draw white text
  display.cp437(true);         // Use full 256 char 'Code Page 437' font
  display.println("Send me something");
  display.display();

  ser.begin(9600);
  msg.canary = CANARY;
}

int recv_data(char *m){
  int counter = 0;
  while (ser.available() == 0) {}
  while(ser.available() > 0){
    m[counter++] = ser.read();
    delay(2);
  }
  m[counter] = '\0';
  return counter;
}

void loop() {
  ser.println("Input >");
  recv_data(msg.content);

  display.clearDisplay();
  display.setCursor(0, 0);
  display.println("Send me something\n");
  display.print("Got: ");
  display.println(msg.content);
  char canary[15];
  sprintf(canary, "Canary = 0x%x", msg.canary);
  display.println(canary);
  display.display();

  delay(100); // Quick window to see the canary value
  if (msg.canary != CANARY){
    display.clearDisplay();
    display.setCursor(0, 0);
    if (msg.canary == 0xc0fe){
      display.println("Well done !\nI like this canary");
    }else{
      display.println("Oh no, you smashed my canary !");
    }
    display.display();
  }

  delay(100);
}
